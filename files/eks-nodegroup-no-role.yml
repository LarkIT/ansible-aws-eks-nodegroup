---
AWSTemplateFormatVersion: "2010-09-09"
Description: 'EKS Node Group definition.'

Parameters:

  ClusterName:
    Type: String
    Description: The EKS cluster name.

  NodeGroupName:
    Type: String
    Description: Unique identifier for the Node Group.

  NodeGroupRoleArn:
    Type: String
    Description: The ARN of the role for the nodegroup instances to assume.

  NodeInstanceType:
    Type: String
    Description: EC2 instance type for the node instances.

  NodeGroupDesiredCapacity:
    Type: Number
    Description: Desired capacity of Node Group ASG.

  NodeSubnets:
    Type: "List<AWS::EC2::Subnet::Id>"
    Description: The subnets where workers can be created.

Resources:
  LT:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Join [ "_", [!Ref ClusterName, "launch_template"]]
      LaunchTemplateData:
        BlockDeviceMappings:
        -
          DeviceName: /dev/xvda
          Ebs:
            DeleteOnTermination: true
            Encrypted: true
            VolumeType: gp2
        InstanceType: !Ref NodeInstanceType
        UserData:
          "Fn::Base64": |
             Content-Type: multipart/mixed; boundary="==DATABOUNDARY=="
             MIME-Version: 1.0

             --==DATABOUNDARY==
             Content-Type: text/x-shellscript; charset="us-ascii"

             #!/bin/bash
             mkdir -p /opt/certs
             openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /opt/certs/worker.key -out /opt/certs/worker.crt -subj "/CN=$(hostname -f)/O=acn"

             --==DATABOUNDARY==--
  NodeGroup:
    Type: 'AWS::EKS::Nodegroup'
    Properties:
      NodegroupName: !Ref NodeGroupName
      ClusterName: !Ref ClusterName
      NodeRole: !Ref NodeGroupRoleArn
      LaunchTemplate:
        Id:
          Ref: LT
      ScalingConfig:
        MinSize: 2
        DesiredSize: !Ref NodeGroupDesiredCapacity
        MaxSize: 5
      Subnets: !Ref NodeSubnets
